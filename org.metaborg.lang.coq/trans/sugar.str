module sugar

imports include/Coq

strategies
  
  sugar-all = bottomup(try(sugar))

rules
  sugar:
    Ref("nil") -> List([])
    
  sugar:
    Apply(Ref("cons"), [x, List(tl*)]) -> List([x | tl*])
  
  sugar:
  	Apply(Ref("pair"), [x, y]) -> Tuple(x, [y])
  	where not(Tuple(_, _) := x)
  
  sugar:
  	Apply(Ref("pair"), [Tuple(hd, tl*), x]) -> Tuple(hd, [tl*, x])
  
  sugar:
    Apply(Ref("prod"), [x, y]) -> Prod(x, y)
  
  sugar:
    Apply(Ref("not"), [Eq(x, y)]) -> NotE(x, y)
  
  sugar:
    Apply(Ref("eq"), [x, y]) -> Eq(x, y)