
module Gallina.generated

completions
  completion template Term : "forall Binder , Term" =
    "forall " <Binder:Binder> " , " <Term:Term>                              
  completion template Term : "fun Binder => Term" =
    "fun " <Binder:Binder> " => " <Term:Term>                                  
  completion template Term : "fix FixBodies" =
    "fix " <FixBodies:FixBodies>                                                    
  completion template Term : "cofix CoFixBodies" =
    "cofix " <CoFixBodies:CoFixBodies>                                          
  completion template Term : "let Ident OptType := Term in Term" =
    "let " <Ident:Ident> " " <:Binder> " " <OptType:OptType> " := " <Term:Term> " in " <Term:Term>  
  completion template Term : "let fix FixBody in Term" =
    "let fix " <FixBody:FixBody> " in " <Term:Term>                       
  completion template Term : "let fix CoFixBody in Term" =
    "let fix " <CoFixBody:CoFixBody> " in " <Term:Term>                 
  completion template Term : "let ( ) OptDepRetType := Term in Term" =
    "let ( " <:Name> ") " <OptDepRetType:OptDepRetType> " := " <Term:Term> " in " <Term:Term>  
  completion template Term : "let \' Pattern OptInTerm := Term OptReturnType in Term" =
    "let \' " <Pattern:Pattern> " " <OptInTerm:OptInTerm> " := " <Term:Term> " " <OptReturnType:OptReturnType> " in " <Term:Term>  
  completion template Term : "if Term OptDepRetType then Term else Term" =
    "if " <Term:Term> " " <OptDepRetType:OptDepRetType> " then " <Term:Term> " else " <Term:Term>  
  completion template Term : "@QualId " =
    "@" <QualId:QualId> " " <:Term>                                                      
  completion template Term : "Term % Ident" =
    <Term:Term> " % " <Ident:Ident>                                                  
  completion template Term : "match MatchItem OptReturnType with Equations end" =
    "match " <MatchItem:MatchItem> " " <OptReturnType:OptReturnType> " with " <Equations:Equations> " end"  
  completion template Term : "Term : Term" =
    <Term:Term> " : " <Term:Term>                                                     
  completion template Term : "Term <: Term" =
    <Term:Term> " <: " <Term:Term>                                                   
  completion template Term : "Term :>" =
    <Term:Term> " :>"                                                                     
  completion template Term : "Term -> Term" =
    <Term:Term> " -> " <Term:Term>                                                   
  completion template Term : "Term Arg" =
    <Term:Term> " " <Arg:Arg>                                                            
  completion template Equations : "| Equation" =
    "| " <Equation:Equation>                                                      
  completion template OptType : ": Term" =
    ": " <Term:Term>                                                                    
  completion template Arg : "(Ident := Term)" =
    "(" <Ident:Ident> " := " <Term:Term> ")"                                       
  completion template Binder : "(Name: Term)" =
    "(" <Name:Name> ": " <Term:Term> ")"                                           
  completion template Binder : "(NameOptType := Term)" =
    "(" <Name:Name> <OptType:OptType> " := " <Term:Term> ")"              
  completion template Name : "_" =
    "_"                                                                                         
  completion template Term : "(Term)" =
    "(" <Term:Term> ")"                                                                    
  completion template Sort : "Prop" =
    "Prop"                                                                                   
  completion template Sort : "Set" =
    "Set"                                                                                     
  completion template Sort : "Tyoe" =
    "Tyoe"                                                                                   

completions
  completion template FixBodies : "FixBody with FixBody for Ident" =
    <FixBody:FixBody> " with " <FixBody:FixBody> " for " <Ident:Ident>  
  completion template FixBody : "Ident Binder OptAnnotation OptType := Term" =
    <Ident:Ident> " " <Binder:Binder> " " <OptAnnotation:OptAnnotation> " " <OptType:OptType> " := " <Term:Term>  
  completion template CoFixBodies : "CoFixBody with CoFixBody for Ident" =
    <CoFixBody:CoFixBody> " with " <CoFixBody:CoFixBody> " for " <Ident:Ident>  
  completion template CoFixBody : "Ident OptType := Term" =
    <Ident:Ident> " " <:Binder> " " <OptType:OptType> " := " <Term:Term>  
  completion template OptAnnotation : "{ struct Ident}" =
    "{ struct " <Ident:Ident> "}"                       
  completion template MatchItem : "Term OptAlias OptInTerm" =
    <Term:Term> " " <OptAlias:OptAlias> " " <OptInTerm:OptInTerm>  
  completion template OptAlias : "as Name" =
    "as " <Name:Name>                                                
  completion template OptInTerm : "in Term" =
    "in " <Term:Term>                                               
  completion template OptDepRetType : "OptAlias ReturnType" =
    <OptAlias:OptAlias> " " <ReturnType:ReturnType>  
  completion template ReturnType : "return Term" =
    "return " <Term:Term>                                      
  completion template Equation : "MultPattern => Term" =
    <MultPattern:MultPattern> " => " <Term:Term>         
  completion template Pattern : "QualId Pattern" =
    <QualId:QualId> " " <Pattern:Pattern>                      
  completion template Pattern : "Pattern as Ident" =
    <Pattern:Pattern> " as " <Ident:Ident>                   
  completion template Pattern : "Pattern % Ident" =
    <Pattern:Pattern> " % " <Ident:Ident>                     
  completion template Pattern : "_" =
    "_"                                                                     
  completion template Pattern : "(OrPattern)" =
    "(" <OrPattern:OrPattern> ")"                                 