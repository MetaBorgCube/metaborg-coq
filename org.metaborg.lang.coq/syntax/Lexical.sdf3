module Lexical

lexical syntax

	// Space, newline and horizontal tabulation are considered as blanks. Blanks are ignored but they separate tokens.

	LAYOUT = [\ \n\t\r]

	// Comments in Coq are enclosed between (* and *), and can be nested. 
	// They can contain any character. However, string literals must be correctly closed. 
	// Comments are treated as blanks.
 
	LAYOUT      = "(*" CommentChar* "*)"
	CommentChar = ~[\"] | String
 	
 	FirstLetter      = [a-zA-Z\_]
 	SubsequentLetter = [a-zA-Z0-9\_\']
 	Ident            = FirstLetter SubsequentLetter*
 	Ident            = Reserved {reject}
	
 	Digit	  = [0-9]
	Num     = Digit+
	Integer	= "-"? Num

	// Strings are delimited by " (double quote), and enclose a sequence of any characters different from " or the sequence "" to denote the double quote character.
	
	String     = "\"" StringChar* "\""
	StringChar = ~[\"] | "\"\""
	
	
 	Reserved = "_"
 	Reserved = "as"
 	Reserved = "at"
 	Reserved = "cofix"
 	Reserved = "else"
 	Reserved = "end"
 	Reserved = "exists"
 	Reserved = "exists2"
 	Reserved = "fix"
 	Reserved = "for"
 	Reserved = "forall"
 	Reserved = "fun"
 	Reserved = "if"
 	Reserved = "IF"
 	Reserved = "in"
 	Reserved = "let"
 	Reserved = "match"
 	Reserved = "mod"
 	Reserved = "Prop"
 	Reserved = "return"
 	Reserved = "Set"
 	Reserved = "then"
 	Reserved = "Type"
 	Reserved = "using"
 	Reserved = "where"
 	Reserved = "with"
						
lexical restrictions

	Ident  -/- [a-zA-A0-9\_\']
	Num    -/- [0-9]
	String -/- [\"]
	
context-free restrictions

	LAYOUT? -/- [\ \n\r\t]
	LAYOUT? -/- [\(].[\*]
	