module mix/CoqMix[E]

imports
  Coq
  Gallina
  Vernacular
  
  
exports
  variables
    "term"  [a-z0-9\-\_\']+ -> Term      {prefer}
    "decl"  [a-z0-9\-\_\']+ -> ConsDecls {prefer}
    "sent"  [a-z0-9\-\_\']+ -> Sentence  {prefer}
    "ident" [a-z0-9\-\_\']+ -> Ident     {prefer}

  context-free syntax
    "T" "|[" Term      "]|" -> E {cons("ToMetaExpr")}
    "S" "|[" Sentence  "]|" -> E {cons("ToMetaExpr")}
        "|[" TopLevel* "]|" -> E {cons("ToMetaListExpr")}

  lexical syntax
    "term"  [a-z0-9\-\_\']+ -> Ident {reject}
    "decl"  [a-z0-9\-\_\']+ -> Ident {reject}
    "sent"  [a-z0-9\-\_\']+ -> Ident {reject}
    "ident" [a-z0-9\-\_\']+ -> Ident {reject}
  
  
context-free restrictions
  Term   -/- [\_a-z0-9\']