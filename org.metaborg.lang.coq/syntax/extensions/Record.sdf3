module extensions/Record

// Section 2.1 of the reference manual

imports
  Lexical
  Gallina
  Options
  Qid

context-free syntax

  RecordKeyword.RecordRecord      = <Record>
  RecordKeyword.RecordStructure   = <Structure>
  RecordKeyword.RecordInductive   = <Inductive>
  RecordKeyword.RecordCoInductive = <CoInductive>

context-free syntax

  Sentence = <<Record>>

context-free syntax

  Record.Record = <
  <RecordKeyword> <Ident><OptBinders><OptSort> :=
   <OptIdents> {
      <{RecordField ";\n"}*>
    }.
  >

context-free syntax

  RecordField.RecFld         = <<Ident><OptBinders> : <Type><OptWhereNotation>>
  RecordField.RecExplicitFld = <<Ident><OptBinders><OptType> := <Term>>

context-free syntax

  Term.Projection = <<Term>.(<QualId>)>
  Term.ProjArgs   = <<Term>.(<QualId> <Arg+>)>
  Term.ProjQualArgs = <<Term>.(@<QualId> <Term+>)>

template options

  tokenize: ".(@;"